openapi: 3.0.1
info:
  title: Transparency Log Service
  version: 1.0.2
servers:
# Added by API Auto Mocking Plugin
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/TUB-CNPE-TB/transparency-log-service/1.0.1
- url: http://localhost:8080/
paths:
  /api/usages:
    post:
      description: Create/update a usage
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/Usage'
      responses:
        200:
          description: ""
          
  /api/usages/batch:
    post:
      description: Create/update multiple usage
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/BatchUsage'
      responses:
        200:
          description: ""
components:
  schemas:
    BatchUsage:
      type: array
      items:
        $ref: '#/components/schemas/Usage'
    Usage:
      type: object
      properties:
        reference:
          type: string
          format: uuid
          description: unique identifier of the request/response (example x-request)
        endpoint:
          type: object
          properties:
            service:
              type: string
              description: destination service name. Take from k8s pod or deployment (idea. env var))
            protocol:
              type: string
              description: example http
            method:
              type: string
              description: example GET, POST
            path:
              type: string
              description: complete path (with query parameters)
        fields:
          type: array
          items:
            type: object
            properties:
              phase:
                type: string
                enum: [request, response]
              type:
                type: string
                description: format extracted
                enum: [properties, json, yaml, xml]
              origin:
                type: string
                enum: [header, body]
              path:
                type: string
                description: parsed expression from the origin (xpath, jsonpath)
              count:
                type: number
        cause:
          type: object
          additionalProperties:
            type: string
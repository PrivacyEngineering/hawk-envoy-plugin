# istio api config: https://github.com/istio/api/blob/master/networking/v1alpha3/envoy_filter.gen.json
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: lua-filter-config
  namespace: istio-system
spec:
  configPatches:
    - applyTo: EXTENSION_CONFIG
      match:
        context: GATEWAY
      patch:
        operation: ADD
        value:
          name: lua-filter-config
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
            inline_code: |
              function envoy_on_request(request_handle)
                local headers, body = request_handle:httpCall(
                 "outbound|80||actix-collector-service.httpbin-gateway.svc.cluster.local",
                 {
                  [":method"] = "POST",
                  [":path"] = "/echo",
                  [":authority"] = "internal.org.net",
                  ["Content-Type"] = "application/json"
                 },
                "{\"from\":\"http://service/path\",\"content\":{\"headers\":{\"type\":\"request\"},\"body\":{}}}",
                1000)

                request_handle:logWarn("LUA-request (after): call actix-collector")
                request_handle:logWarn(dump(headers))
                request_handle:logWarn(dump(body))
              end

              function envoy_on_response(response_handle)
                response_handle:headers():add("x-lua-filter-res", "v2_OK")
                response_handle:logWarn("LUA-response: call actix-collector")

                local headers, body = response_handle:httpCall(
                   "outbound|80||actix-collector-service.httpbin-gateway.svc.cluster.local",
                   {
                    [":method"] = "POST",
                    [":path"] = "/echo",
                    [":authority"] = "internal.org.net",
                    ["Content-Type"] = "application/json"
                   },
                  "{\"from\":\"http://service/path\",\"content\":{\"headers\":{\"type\":\"response\"},\"body\":{}}}",
                  1000)

                response_handle:logWarn("LUA-response (after): call actix-collector")
                response_handle:logWarn(dump(headers))
                response_handle:logWarn(dump(body))
              end

              function dump(o)
                 if type(o) == 'table' then
                    local s = '{ '
                    for k,v in pairs(o) do
                       if type(k) ~= 'number' then k = '"'..k..'"' end
                       s = s .. '['..k..'] = ' .. dump(v) .. ','
                    end
                    return s .. '} '
                 else
                    return tostring(o)
                 end
              end